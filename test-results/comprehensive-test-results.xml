<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="105" failures="15" errors="0" time="31.858">
  <testsuite name="DefaultPluginManager" errors="0" failures="2" skipped="0" timestamp="2025-06-11T21:08:32" time="30.697" tests="34">
    <testcase classname="DefaultPluginManager Plugin Registration should register a valid plugin" name="DefaultPluginManager Plugin Registration should register a valid plugin" time="0.013">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Registration should reject plugin with invalid name" name="DefaultPluginManager Plugin Registration should reject plugin with invalid name" time="0.009">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Registration should reject plugin with invalid version" name="DefaultPluginManager Plugin Registration should reject plugin with invalid version" time="0">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Registration should reject duplicate plugin registration" name="DefaultPluginManager Plugin Registration should reject duplicate plugin registration" time="0.002">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Registration should apply plugin configuration during registration" name="DefaultPluginManager Plugin Registration should apply plugin configuration during registration" time="0">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Registration should respect maximum plugin limit" name="DefaultPluginManager Plugin Registration should respect maximum plugin limit" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Unregistration should unregister a plugin" name="DefaultPluginManager Plugin Unregistration should unregister a plugin" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Unregistration should call destroy hook when unregistering" name="DefaultPluginManager Plugin Unregistration should call destroy hook when unregistering" time="0.002">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Unregistration should throw error when unregistering non-existent plugin" name="DefaultPluginManager Plugin Unregistration should throw error when unregistering non-existent plugin" time="0">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Initialization should initialize all enabled plugins" name="DefaultPluginManager Plugin Initialization should initialize all enabled plugins" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Initialization should not initialize disabled plugins" name="DefaultPluginManager Plugin Initialization should not initialize disabled plugins" time="0">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Initialization should handle initialization failures" name="DefaultPluginManager Plugin Initialization should handle initialization failures" time="0.004">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Initialization should initialize plugins in dependency order" name="DefaultPluginManager Plugin Initialization should initialize plugins in dependency order" time="0.002">
    </testcase>
    <testcase classname="DefaultPluginManager Dependency Validation should validate dependencies are present" name="DefaultPluginManager Dependency Validation should validate dependencies are present" time="0">
    </testcase>
    <testcase classname="DefaultPluginManager Dependency Validation should pass validation when dependencies are present" name="DefaultPluginManager Dependency Validation should pass validation when dependencies are present" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Dependency Validation should detect circular dependencies" name="DefaultPluginManager Dependency Validation should detect circular dependencies" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Execution Order should return plugins in priority order" name="DefaultPluginManager Plugin Execution Order should return plugins in priority order" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Plugin Execution Order should handle same priority plugins consistently" name="DefaultPluginManager Plugin Execution Order should handle same priority plugins consistently" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Hook Execution should execute beforeToolCall hooks for enabled plugins" name="DefaultPluginManager Hook Execution should execute beforeToolCall hooks for enabled plugins" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Hook Execution should execute afterToolCall hooks for enabled plugins" name="DefaultPluginManager Hook Execution should execute afterToolCall hooks for enabled plugins" time="0.002">
    </testcase>
    <testcase classname="DefaultPluginManager Hook Execution should skip disabled plugins during execution" name="DefaultPluginManager Hook Execution should skip disabled plugins during execution" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Hook Execution should respect plugin tool filters" name="DefaultPluginManager Hook Execution should respect plugin tool filters" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Hook Execution should handle plugin execution timeouts" name="DefaultPluginManager Hook Execution should handle plugin execution timeouts" time="0.103">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: undefined
    at expect (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/expect/build/index.js:113:15)
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-manager.test.ts:385:19)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="DefaultPluginManager Health Checks should perform health checks on all plugins" name="DefaultPluginManager Health Checks should perform health checks on all plugins" time="0.002">
    </testcase>
    <testcase classname="DefaultPluginManager Health Checks should handle health check failures" name="DefaultPluginManager Health Checks should handle health check failures" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Health Checks should handle health check errors" name="DefaultPluginManager Health Checks should handle health check errors" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Statistics should aggregate statistics from all plugins" name="DefaultPluginManager Statistics should aggregate statistics from all plugins" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Statistics should handle statistics collection errors" name="DefaultPluginManager Statistics should handle statistics collection errors" time="0.001">
    </testcase>
    <testcase classname="DefaultPluginManager Error Handling should mark plugins as unhealthy after errors" name="DefaultPluginManager Error Handling should mark plugins as unhealthy after errors" time="0.002">
    </testcase>
    <testcase classname="DefaultPluginManager Error Handling should emit error events" name="DefaultPluginManager Error Handling should emit error events" time="30.002">
      <failure>Error: thrown: &quot;Exceeded timeout of 30000 ms for a test while waiting for `done()` to be called.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-manager.test.ts:495:7
    at _dispatchDescribe (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-circus/build/index.js:55:5)
    at /Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-manager.test.ts:471:11
    at _dispatchDescribe (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-circus/build/index.js:55:5)
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-manager.test.ts:93:9)
    at Runtime._execModule (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runTestInternal (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="DefaultPluginManager Error Handling should continue processing other plugins after one fails" name="DefaultPluginManager Error Handling should continue processing other plugins after one fails" time="0.014">
    </testcase>
    <testcase classname="DefaultPluginManager Event Emission should emit plugin:registered event" name="DefaultPluginManager Event Emission should emit plugin:registered event" time="0.006">
    </testcase>
    <testcase classname="DefaultPluginManager Event Emission should emit plugin:unregistered event" name="DefaultPluginManager Event Emission should emit plugin:unregistered event" time="0.002">
    </testcase>
    <testcase classname="DefaultPluginManager Event Emission should emit plugins:initialized event" name="DefaultPluginManager Event Emission should emit plugins:initialized event" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="MCP Proxy Wrapper - Edge Cases and Stress Tests" errors="0" failures="1" skipped="0" timestamp="2025-06-11T21:09:03" time="0.275" tests="16">
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Null and Undefined Handling should handle null arguments gracefully" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Null and Undefined Handling should handle null arguments gracefully" time="0.018">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Null and Undefined Handling should handle empty arguments object" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Null and Undefined Handling should handle empty arguments object" time="0.004">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Large Data Handling should handle large text content" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Large Data Handling should handle large text content" time="0.002">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Large Data Handling should handle large argument objects" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Large Data Handling should handle large argument objects" time="0.004">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Large Data Handling should handle multiple large content blocks" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Large Data Handling should handle multiple large content blocks" time="0.003">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Special Characters and Encoding should handle Unicode characters correctly" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Special Characters and Encoding should handle Unicode characters correctly" time="0.003">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Special Characters and Encoding should handle JSON special characters" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Special Characters and Encoding should handle JSON special characters" time="0.002">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Concurrent Operations should handle concurrent tool calls correctly" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Concurrent Operations should handle concurrent tool calls correctly" time="0.02">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Concurrent Operations should handle concurrent different tool calls" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Concurrent Operations should handle concurrent different tool calls" time="0.012">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Hook Error Scenarios should handle intermittent hook failures" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Hook Error Scenarios should handle intermittent hook failures" time="0.01">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: false
Received: true
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/proxy-wrapper.edge-cases.test.ts:260:34)</failure>
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Hook Error Scenarios should handle hook errors with complex objects" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Hook Error Scenarios should handle hook errors with complex objects" time="0.002">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Memory and Performance should handle many sequential tool calls without memory leaks" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Memory and Performance should handle many sequential tool calls without memory leaks" time="0.018">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Memory and Performance should handle rapid fire tool calls" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Memory and Performance should handle rapid fire tool calls" time="0.008">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Edge Case Tool Scenarios should handle tool that returns empty content array" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Edge Case Tool Scenarios should handle tool that returns empty content array" time="0.002">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Edge Case Tool Scenarios should handle tool with no return value" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Edge Case Tool Scenarios should handle tool with no return value" time="0.003">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Edge Cases and Stress Tests Edge Case Tool Scenarios should handle tool that takes very long to execute" name="MCP Proxy Wrapper - Edge Cases and Stress Tests Edge Case Tool Scenarios should handle tool that takes very long to execute" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="MCP Proxy Wrapper - Comprehensive Tests" errors="0" failures="4" skipped="0" timestamp="2025-06-11T21:09:03" time="0.06" tests="14">
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Basic Proxy Functionality should allow normal tool registration and calls" name="MCP Proxy Wrapper - Comprehensive Tests Basic Proxy Functionality should allow normal tool registration and calls" time="0.004">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Basic Proxy Functionality should list registered tools correctly" name="MCP Proxy Wrapper - Comprehensive Tests Basic Proxy Functionality should list registered tools correctly" time="0.003">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Basic Proxy Functionality should handle tool errors gracefully" name="MCP Proxy Wrapper - Comprehensive Tests Basic Proxy Functionality should handle tool errors gracefully" time="0.008">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Before Hook Functionality should execute beforeToolCall hook" name="MCP Proxy Wrapper - Comprehensive Tests Before Hook Functionality should execute beforeToolCall hook" time="0.003">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Before Hook Functionality should allow argument modification in beforeToolCall" name="MCP Proxy Wrapper - Comprehensive Tests Before Hook Functionality should allow argument modification in beforeToolCall" time="0.002">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Hello, Modified World!&quot;
Received: &quot;Hello, Modified Modified World!&quot;
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/proxy-wrapper.comprehensive.test.ts:123:38)</failure>
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Before Hook Functionality should support short-circuiting with beforeToolCall" name="MCP Proxy Wrapper - Comprehensive Tests Before Hook Functionality should support short-circuiting with beforeToolCall" time="0.002">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests After Hook Functionality should execute afterToolCall hook" name="MCP Proxy Wrapper - Comprehensive Tests After Hook Functionality should execute afterToolCall hook" time="0.001">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests After Hook Functionality should allow result modification in afterToolCall" name="MCP Proxy Wrapper - Comprehensive Tests After Hook Functionality should allow result modification in afterToolCall" time="0.001">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Hello, World! [Modified by hook]&quot;
Received: &quot;Hello, World! [Modified by hook] [Modified by hook]&quot;
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/proxy-wrapper.comprehensive.test.ts:198:38)</failure>
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Combined Hook Functionality should execute both before and after hooks" name="MCP Proxy Wrapper - Comprehensive Tests Combined Hook Functionality should execute both before and after hooks" time="0.002">
      <failure>Error: expect(received).toEqual(expected) // deep equality

- Expected  - 0
+ Received  + 2

  Array [
    &quot;before:test&quot;,
+   &quot;before:test&quot;,
+   &quot;after:test&quot;,
    &quot;after:test&quot;,
  ]
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/proxy-wrapper.comprehensive.test.ts:229:25)</failure>
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Error Handling should handle hook errors gracefully" name="MCP Proxy Wrapper - Comprehensive Tests Error Handling should handle hook errors gracefully" time="0.003">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Error Handling should handle afterToolCall hook errors" name="MCP Proxy Wrapper - Comprehensive Tests Error Handling should handle afterToolCall hook errors" time="0.002">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Metadata and Context should include metadata in hook context" name="MCP Proxy Wrapper - Comprehensive Tests Metadata and Context should include metadata in hook context" time="0.002">
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Complex Tool Interactions should handle multiple concurrent tool calls" name="MCP Proxy Wrapper - Comprehensive Tests Complex Tool Interactions should handle multiple concurrent tool calls" time="0.002">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 2
Received: 6
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/proxy-wrapper.comprehensive.test.ts:339:32)</failure>
    </testcase>
    <testcase classname="MCP Proxy Wrapper - Comprehensive Tests Complex Tool Interactions should handle tools with complex return types" name="MCP Proxy Wrapper - Comprehensive Tests Complex Tool Interactions should handle tools with complex return types" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="MCP Protocol Compliance Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-11T21:09:03" time="0.048" tests="15">
    <testcase classname="MCP Protocol Compliance Tests Protocol Equivalence should behave identically to unwrapped server for tool calls" name="MCP Protocol Compliance Tests Protocol Equivalence should behave identically to unwrapped server for tool calls" time="0.004">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Protocol Equivalence should provide identical tool listings" name="MCP Protocol Compliance Tests Protocol Equivalence should provide identical tool listings" time="0.005">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests MCP Request Handling should handle initialize request correctly" name="MCP Protocol Compliance Tests MCP Request Handling should handle initialize request correctly" time="0.001">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests MCP Request Handling should handle tools/list request" name="MCP Protocol Compliance Tests MCP Request Handling should handle tools/list request" time="0.003">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests MCP Request Handling should handle tools/call request" name="MCP Protocol Compliance Tests MCP Request Handling should handle tools/call request" time="0.002">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Error Response Compliance should return proper error format for tool execution errors" name="MCP Protocol Compliance Tests Error Response Compliance should return proper error format for tool execution errors" time="0.008">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Error Response Compliance should handle non-existent tool calls appropriately" name="MCP Protocol Compliance Tests Error Response Compliance should handle non-existent tool calls appropriately" time="0.001">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Content Type Handling should handle text content correctly" name="MCP Protocol Compliance Tests Content Type Handling should handle text content correctly" time="0.001">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Content Type Handling should handle resource content correctly" name="MCP Protocol Compliance Tests Content Type Handling should handle resource content correctly" time="0.002">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Content Type Handling should handle mixed content types" name="MCP Protocol Compliance Tests Content Type Handling should handle mixed content types" time="0.002">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Metadata Preservation should preserve tool result metadata" name="MCP Protocol Compliance Tests Metadata Preservation should preserve tool result metadata" time="0.002">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Metadata Preservation should handle empty metadata gracefully" name="MCP Protocol Compliance Tests Metadata Preservation should handle empty metadata gracefully" time="0.001">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Connection Lifecycle should handle connection and disconnection properly" name="MCP Protocol Compliance Tests Connection Lifecycle should handle connection and disconnection properly" time="0.001">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Connection Lifecycle should handle multiple connection attempts gracefully" name="MCP Protocol Compliance Tests Connection Lifecycle should handle multiple connection attempts gracefully" time="0.001">
    </testcase>
    <testcase classname="MCP Protocol Compliance Tests Connection Lifecycle should handle disconnection when not connected" name="MCP Protocol Compliance Tests Connection Lifecycle should handle disconnection when not connected" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Plugin Interface Validation" errors="0" failures="0" skipped="0" timestamp="2025-06-11T21:09:04" time="0.027" tests="17">
    <testcase classname="Plugin Interface Validation Plugin Metadata should have required properties" name="Plugin Interface Validation Plugin Metadata should have required properties" time="0.001">
    </testcase>
    <testcase classname="Plugin Interface Validation Plugin Metadata should have valid configuration" name="Plugin Interface Validation Plugin Metadata should have valid configuration" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Plugin Lifecycle should initialize correctly" name="Plugin Interface Validation Plugin Lifecycle should initialize correctly" time="0.001">
    </testcase>
    <testcase classname="Plugin Interface Validation Plugin Lifecycle should perform health checks" name="Plugin Interface Validation Plugin Lifecycle should perform health checks" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Plugin Lifecycle should provide statistics" name="Plugin Interface Validation Plugin Lifecycle should provide statistics" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Plugin Lifecycle should cleanup on destroy" name="Plugin Interface Validation Plugin Lifecycle should cleanup on destroy" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Hook Functionality should execute beforeToolCall hook" name="Plugin Interface Validation Hook Functionality should execute beforeToolCall hook" time="0.001">
    </testcase>
    <testcase classname="Plugin Interface Validation Hook Functionality should short-circuit dangerous tools" name="Plugin Interface Validation Hook Functionality should short-circuit dangerous tools" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Hook Functionality should validate arguments" name="Plugin Interface Validation Hook Functionality should validate arguments" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Hook Functionality should execute afterToolCall hook" name="Plugin Interface Validation Hook Functionality should execute afterToolCall hook" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Hook Functionality should track performance metrics" name="Plugin Interface Validation Hook Functionality should track performance metrics" time="0.011">
    </testcase>
    <testcase classname="Plugin Interface Validation Configuration Management should allow configuration updates" name="Plugin Interface Validation Configuration Management should allow configuration updates" time="0.001">
    </testcase>
    <testcase classname="Plugin Interface Validation Configuration Management should respect tool filtering configuration" name="Plugin Interface Validation Configuration Management should respect tool filtering configuration" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Error Handling should handle errors gracefully" name="Plugin Interface Validation Error Handling should handle errors gracefully" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Statistics and Monitoring should track call statistics" name="Plugin Interface Validation Statistics and Monitoring should track call statistics" time="0">
    </testcase>
    <testcase classname="Plugin Interface Validation Statistics and Monitoring should detect unhealthy state" name="Plugin Interface Validation Statistics and Monitoring should detect unhealthy state" time="0.001">
    </testcase>
    <testcase classname="Plugin Interface Validation Integration Validation should work with different tool types" name="Plugin Interface Validation Integration Validation should work with different tool types" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Plugin Integration Tests" errors="0" failures="8" skipped="0" timestamp="2025-06-11T21:09:04" time="0.25" tests="9">
    <testcase classname="Plugin Integration Tests Single Plugin Integration should execute logging plugin with real tool calls" name="Plugin Integration Tests Single Plugin Integration should execute logging plugin with real tool calls" time="0.015">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 2
Received length: 1
Received array:  [{&quot;phase&quot;: &quot;after&quot;, &quot;timestamp&quot;: 1749676144739, &quot;toolName&quot;: &quot;echo&quot;}]
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-integration.test.ts:231:34)</failure>
    </testcase>
    <testcase classname="Plugin Integration Tests Single Plugin Integration should handle authentication plugin blocking unauthorized calls" name="Plugin Integration Tests Single Plugin Integration should handle authentication plugin blocking unauthorized calls" time="0.004">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: undefined
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-integration.test.ts:263:42)</failure>
    </testcase>
    <testcase classname="Plugin Integration Tests Single Plugin Integration should enhance responses with metadata plugin" name="Plugin Integration Tests Single Plugin Integration should enhance responses with metadata plugin" time="0.002">
    </testcase>
    <testcase classname="Plugin Integration Tests Multiple Plugin Integration should execute multiple plugins in priority order" name="Plugin Integration Tests Multiple Plugin Integration should execute multiple plugins in priority order" time="0.002">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 2
Received length: 1
Received array:  [{&quot;phase&quot;: &quot;after&quot;, &quot;timestamp&quot;: 1749676144752, &quot;toolName&quot;: &quot;multi-plugin-tool&quot;}]
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-integration.test.ts:346:34)</failure>
    </testcase>
    <testcase classname="Plugin Integration Tests Multiple Plugin Integration should handle authentication and rate limiting together" name="Plugin Integration Tests Multiple Plugin Integration should handle authentication and rate limiting together" time="0.004">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: undefined
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-integration.test.ts:397:41)</failure>
    </testcase>
    <testcase classname="Plugin Integration Tests Performance and Caching should cache repeated calls with caching plugin" name="Plugin Integration Tests Performance and Caching should cache repeated calls with caching plugin" time="0.003">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: undefined
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-integration.test.ts:443:31)</failure>
    </testcase>
    <testcase classname="Plugin Integration Tests Error Handling and Resilience should handle plugin errors gracefully without breaking tool calls" name="Plugin Integration Tests Error Handling and Resilience should handle plugin errors gracefully without breaking tool calls" time="0.001">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 2
Received length: 1
Received array:  [{&quot;phase&quot;: &quot;after&quot;, &quot;timestamp&quot;: 1749676144761, &quot;toolName&quot;: &quot;resilient-tool&quot;}]
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-integration.test.ts:492:34)</failure>
    </testcase>
    <testcase classname="Plugin Integration Tests Error Handling and Resilience should handle tool execution errors with plugins active" name="Plugin Integration Tests Error Handling and Resilience should handle tool execution errors with plugins active" time="0.004">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 1
Received length: 0
Received array:  []
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-integration.test.ts:526:34)</failure>
    </testcase>
    <testcase classname="Plugin Integration Tests Plugin Configuration should respect plugin tool filtering" name="Plugin Integration Tests Plugin Configuration should respect plugin tool filtering" time="0.002">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 2
Received length: 1
Received array:  [{&quot;phase&quot;: &quot;after&quot;, &quot;timestamp&quot;: 1749676144768, &quot;toolName&quot;: &quot;allowed-tool&quot;}]
    at Object.&lt;anonymous&gt; (/Users/dennisonbertram/Develop/ModelContextProtocol/mcp-proxy-wrapper/src/__tests__/plugin-integration.test.ts:558:36)</failure>
    </testcase>
  </testsuite>
</testsuites>